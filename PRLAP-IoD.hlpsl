% Role For Drone
role drone(Ui,Dj,Ser:agent,SKdts:symmetric_key,H,P:hash_func,SND,RCV:channel(dy))
played_by Dj
def=
local State : nat,
            DIDj,Rb,HDIDj,HIDu,GIDi,Cj,Cjnew,Rj,Rjnew:text,
            T1,K1,T2,T4,T5:text,
            A1_1,M1,M2,M7,M8,SK:text
const secdu1,secdu2,drone_ser_m7:protocol_id
init State := 0
transition  
0.State = 0 /\ RCV(start) =|>
%Drone registration phase
State' := 1 /\ DIDj' := new() /\ Rb' := new() /\ HDIDj' := H(DIDj'.Rb')
            /\ SND({HDIDj'}_SKdts) 
1.State = 1 /\ RCV({Cj'.GIDi'}_SKdts) =|>
State' := 4 /\ Rj' := P(Cj') /\ SND({Rj'}_SKdts)
3.State = 4 /\ RCV(A1_1'.Cjnew'.T1') =|>
%Drone authentication phase
State' := 7 /\ T2' := new() /\ HIDu' := xor(xor(A1_1',HDIDj),T1') 
            /\ Rjnew' := P(Cjnew') /\ M1' := xor(Rjnew',H(Rj.T2'))
            /\ M2' := H(HIDu'.Rj.T2') /\ SND(M1'.M2'.T2')
7.State = 7 /\ RCV(M7'.M8'.T4'.T5') =|>
State' := 11 /\ M7':= H(Rj.T2.T4') /\ K1':= xor(M8',H(Rjnew.T5'))
            /\ SK' := H(K1'.Rjnew) /\ secret(K1',secdu1,{Ui.Dj})
            /\ request(Dj,Ser,drone_ser_m7,M7') /\ secret(SK',secdu2,{Ui.Dj})
end role

% Role For User
role user(Ui,Dj,Ser:agent,SKuts:symmetric_key,H,C:hash_func,SND,RCV:channel(dy))
played_by Ui
def=
local State : nat,
                IDu,PWu,HIDu,HPWu,GIDi,COUNTER,HDIDj,Cjnew,Rjnew,Wi:text,
                A1,A1_1,M1,M2,M3,M4,M5,M6,M7,M8,SK:text,
                Ra,T1,K1,T2,R1,T3,Kgs,T4,T5:text
const serus1,secdu2,user_server_m4,user_server_m6:protocol_id
init State := 0
transition
0.State = 0 /\ RCV(start) =|>
% User registration phase
State' := 1 /\ IDu' := new() /\ PWu' := new() /\ Ra' := new()
            /\ HIDu' := H(IDu'.Ra') /\ HPWu' := H(PWu'.Ra')
            /\ SND({HIDu'.HPWu'}_SKuts)
1.State = 1 /\ RCV({Wi'.A1'.HDIDj'.COUNTER'}_SKuts) =|>
%User authentication phase
State' := 6 /\ T1' := new() /\ Cjnew' := new()
            /\ A1_1' := xor(xor(A1',HPWu),T1') /\ SND(A1_1'.Cjnew'.T1')
            /\ secret(COUNTER',serus1,{Ui,Ser})
6.State = 6 /\ RCV(M1'.M2'.T2') =|>
State' := 8 /\ R1' := new() /\ T3' := new() /\ GIDi' := new() /\ Kgs' := xor(Wi,HPWu)
            /\ M3':= xor(xor(C(R1'.HDIDj),Kgs'),M2')
            /\ M4':= H(HDIDj.GIDi'.R1'.T3')
            /\ SND(M3'.M4'.HIDu.T2'.T3')  
            /\ witness(Ui,Ser,user_server_m4,M4') 
8.State = 8 /\ RCV(M5',M6',M7'.T4') =|>
State' := 10 /\ M6' := H(Kgs.R1.T4') /\ T5' := new() /\ K1' := new()
            /\ request(Ui,Ser,user_server_m6,M6') 
            /\ Rjnew' := xor(M1,xor(M5',H(R1.T4')))
            /\ M8' := xor(K1',H(Rjnew'.T5')) /\ SK' := H(K1'.Rjnew')
            /\ SND(M7'.M8'.T4'.T5') /\ secret(SK',secdu2,{Ui.Dj})
end role

% Role For TA(server)
role server(Ui,Dj,Ser:agent,SKuts,SKdts:symmetric_key,H,C:hash_func,SND,RCV:channel(dy))
played_by Ser
def=
local State : nat,
            HIDu,HPWu,GIDi,HDIDj,Cj,Rj,A1,M3,M4,M5,M6,M7:text,
            Xser,COUNTER,Kgs,Wi,R1,T2,T3,T4:text
const secds1,serus2,user_server_m4,user_server_m6,drone_ser_m7:protocol_id
init State := 2
transition
2.State = 2 /\ RCV({HIDu'.HPWu'}_SKuts,{HDIDj'}_SKdts) =|>
%registration phase
State' := 3 /\ Xser' := new() /\ COUNTER' := new() /\ GIDi' := new()
            /\ Kgs' := H(HIDu'.Xser') /\ Wi' := xor(Kgs',HPWu')
            /\ Cj' := H(HDIDj'.Xser')
            /\ A1' := xor(xor(C(Cj'.HIDu'),HDIDj'),HPWu')
            /\ SND({Wi'.A1'.HDIDj'.COUNTER'}_SKuts,{Cj'.GIDi'}_SKdts)
3.State = 3 /\ RCV({Rj'}_SKdts) =|>
State' := 5 /\ secret(Rj',secds1,{Dj,Ser})
5.State = 5 /\ RCV(M3'.M4'.HIDu.T2'.T3') =|>
%authentication phase
State' := 9 /\ T4' := new() /\ R1' := xor(M3',xor(Kgs,H(HIDu.Rj.T2')))
            /\ secret(R1',serus2,{Ui,Ser}) /\ M4' := H(HDIDj.GIDi.R1'.T3')
            /\ request(Ser,Ui,user_server_m4,M4') 
            /\ M5' := xor(H(Rj.T2'),H(R1'.T4')) /\ M6' := H(Kgs.R1'.T4')
            /\ M7' := H(Rj.T2'.T4') /\ SND(M5'.M6'.M7'.T4')
            /\ witness(Ser,Ui,user_server_m6,M6') /\ witness(Ser,Dj,drone_ser_m7,M7')
end role

% Role For Session
role session(Ui,Dj,Ser:agent,SKuts,SKdts:symmetric_key,H,P,C:hash_func)
def=
local SD1,RV1,SD2,RV2,SD3,RV3:channel(dy)
composition
        user(Ui,Dj,Ser,SKuts,H,C,SD1,RV1)
        /\ drone(Ui,Dj,Ser,SKdts,H,P,SD2,RV2)
        /\ server(Ui,Dj,Ser,SKuts,SKdts,H,C,SD3,RV3)
end role

%  The role of the session, goal and environment
role environment()
def=
const ui,dj,ser:agent,skuts,skdts,skids,skuis:symmetric_key,
      h,p,c:hash_func,t1,t2,t3,t4,t5,m1,m2,m3,m4,m5,m6,m7,m8,hidu,a1,cjnew:text,
      secds1,secdu1,secdu2,serus1,serus2,drone_ser_m7,user_server_m6,user_server_m4:protocol_id
intruder_knowledge = {ui,dj,ser,skids,skuis,h,p,c,t1,t2,t3,t4,t5,m1,m2,m3,m4,m5,m6,m7,m8,hidu,a1,cjnew}
composition
        session(ui,dj,ser,skuts,skdts,h,p,c)
        /\ session(i,dj,ser,skids,skdts,h,p,c)
        /\ session(ui,i,ser,skuts,skuis,h,p,c)
end role

goal
secrecy_of secds1
secrecy_of secdu1
secrecy_of secdu2
secrecy_of serus1
secrecy_of serus2
authentication_on drone_ser_m7
authentication_on user_server_m6
authentication_on user_server_m4
end goal

environment()